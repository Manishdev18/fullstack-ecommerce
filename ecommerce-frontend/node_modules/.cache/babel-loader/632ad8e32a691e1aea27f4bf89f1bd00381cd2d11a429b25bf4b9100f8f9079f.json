{"ast":null,"code":"var _jsxFileName = \"/Users/manishdevkota/Documents/ecommerce/ecommerce-frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const isAuthenticated = !!user;\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      refreshUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const refreshUser = async () => {\n    try {\n      const response = await authAPI.getProfile();\n      setUser(response.data);\n    } catch (error) {\n      console.error('Failed to refresh user:', error);\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async data => {\n    try {\n      const response = await authAPI.login(data);\n      const {\n        access,\n        refresh,\n        user\n      } = response.data;\n      localStorage.setItem('access_token', access);\n      localStorage.setItem('refresh_token', refresh);\n      setUser(user);\n      toast.success('Login successful!');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login failed:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const register = async data => {\n    try {\n      const response = await authAPI.register(data);\n      toast.success('Registration successful! Please check your email for verification.');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration failed:', error);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Registration failed';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      setUser(null);\n      toast.success('Logged out successfully');\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    refreshUser,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","token","localStorage","getItem","refreshUser","response","getProfile","data","error","console","removeItem","login","access","refresh","setItem","success","_error$response","_error$response$data","errorMessage","detail","register","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manishdevkota/Documents/ecommerce/ecommerce-frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { User, LoginData, RegisterData } from '../types';\nimport { authAPI } from '../services/api';\nimport { toast } from 'react-toastify';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (data: LoginData) => Promise<void>;\n  register: (data: RegisterData) => Promise<void>;\n  logout: () => void;\n  refreshUser: () => Promise<void>;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const isAuthenticated = !!user;\n\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      refreshUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const refreshUser = async () => {\n    try {\n      const response = await authAPI.getProfile();\n      setUser(response.data);\n    } catch (error) {\n      console.error('Failed to refresh user:', error);\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (data: LoginData) => {\n    try {\n      const response = await authAPI.login(data);\n      const { access, refresh, user } = response.data;\n      \n      localStorage.setItem('access_token', access);\n      localStorage.setItem('refresh_token', refresh);\n      \n      setUser(user);\n      toast.success('Login successful!');\n    } catch (error: any) {\n      console.error('Login failed:', error);\n      const errorMessage = error.response?.data?.detail || 'Login failed';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n\n  const register = async (data: RegisterData) => {\n    try {\n      const response = await authAPI.register(data);\n      toast.success('Registration successful! Please check your email for verification.');\n    } catch (error: any) {\n      console.error('Registration failed:', error);\n      const errorMessage = error.response?.data?.detail || 'Registration failed';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      setUser(null);\n      toast.success('Logged out successfully');\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    refreshUser,\n    isAuthenticated,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}