{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (refreshToken) {\n        const response = await axios.post(`${API_BASE_URL}/token/refresh/`, {\n          refresh: refreshToken\n        });\n        const {\n          access\n        } = response.data;\n        localStorage.setItem('access_token', access);\n        originalRequest.headers.Authorization = `Bearer ${access}`;\n        return api(originalRequest);\n      }\n    } catch (refreshError) {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: data => api.post('/api/user/login/', data),\n  register: data => api.post('/api/user/register/', data),\n  logout: () => api.post('/logout/'),\n  getProfile: () => api.get('/api/user/'),\n  updateProfile: data => api.put('/api/user/profile/', data),\n  resetPassword: email => api.post('/password/reset/', {\n    email\n  }),\n  changePassword: data => api.post('/password/change/', data),\n  verifyPhone: data => api.post('/api/user/verify-phone/', data),\n  sendSMS: data => api.post('/api/user/send-sms/', data)\n};\n\n// Products API\nexport const productsAPI = {\n  getProducts: params => api.get('/api/products/', {\n    params\n  }),\n  getProduct: id => api.get(`/api/products/${id}/`),\n  createProduct: data => api.post('/api/products/', data, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  updateProduct: (id, data) => api.put(`/api/products/${id}/`, data, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  deleteProduct: id => api.delete(`/api/products/${id}/`),\n  getCategories: () => api.get('/api/products/categories/')\n};\n\n// Orders API\nexport const ordersAPI = {\n  getOrders: () => api.get('/api/user/orders/'),\n  getOrder: id => api.get(`/api/user/orders/${id}/`),\n  createOrder: data => api.post('/api/user/orders/', data),\n  updateOrder: (id, data) => api.put(`/api/user/orders/${id}/`, data),\n  deleteOrder: id => api.delete(`/api/user/orders/${id}/`),\n  // Order Items\n  getOrderItems: orderId => api.get(`/api/user/orders/${orderId}/order-items/`),\n  addOrderItem: (orderId, data) => api.post(`/api/user/orders/${orderId}/order-items/`, data),\n  updateOrderItem: (orderId, itemId, data) => api.put(`/api/user/orders/${orderId}/order-items/${itemId}/`, data),\n  deleteOrderItem: (orderId, itemId) => api.delete(`/api/user/orders/${orderId}/order-items/${itemId}/`)\n};\n\n// Payment API\nexport const paymentsAPI = {\n  getPayments: () => api.get('/api/user/payments/'),\n  checkout: (orderId, data) => api.put(`/api/user/payments/checkout/${orderId}/`, data),\n  createStripeCheckout: orderId => api.post(`/api/user/payments/stripe/create-checkout-session/${orderId}/`)\n};\n\n// Address API\nexport const addressAPI = {\n  getAddresses: () => api.get('/api/user/profile/address/'),\n  getAddress: id => api.get(`/api/user/profile/address/${id}/`),\n  createAddress: data => api.post('/api/user/profile/address/', data),\n  updateAddress: (id, data) => api.put(`/api/user/profile/address/${id}/`, data),\n  deleteAddress: id => api.delete(`/api/user/profile/address/${id}/`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","refresh","access","data","setItem","refreshError","removeItem","window","location","href","authAPI","login","register","logout","getProfile","get","updateProfile","put","resetPassword","email","changePassword","verifyPhone","sendSMS","productsAPI","getProducts","params","getProduct","id","createProduct","updateProduct","deleteProduct","delete","getCategories","ordersAPI","getOrders","getOrder","createOrder","updateOrder","deleteOrder","getOrderItems","orderId","addOrderItem","updateOrderItem","itemId","deleteOrderItem","paymentsAPI","getPayments","checkout","createStripeCheckout","addressAPI","getAddresses","getAddress","createAddress","updateAddress","deleteAddress"],"sources":["/Users/manishdevkota/Documents/ecommerce/ecommerce-frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { LoginData, RegisterData, Address, CheckoutData } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      \n      try {\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (refreshToken) {\n          const response = await axios.post(`${API_BASE_URL}/token/refresh/`, {\n            refresh: refreshToken,\n          });\n          \n          const { access } = response.data;\n          localStorage.setItem('access_token', access);\n          \n          originalRequest.headers.Authorization = `Bearer ${access}`;\n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        window.location.href = '/login';\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (data: LoginData) => api.post('/api/user/login/', data),\n  register: (data: RegisterData) => api.post('/api/user/register/', data),\n  logout: () => api.post('/logout/'),\n  getProfile: () => api.get('/api/user/'),\n  updateProfile: (data: any) => api.put('/api/user/profile/', data),\n  resetPassword: (email: string) => api.post('/password/reset/', { email }),\n  changePassword: (data: any) => api.post('/password/change/', data),\n  verifyPhone: (data: any) => api.post('/api/user/verify-phone/', data),\n  sendSMS: (data: any) => api.post('/api/user/send-sms/', data),\n};\n\n// Products API\nexport const productsAPI = {\n  getProducts: (params?: any) => api.get('/api/products/', { params }),\n  getProduct: (id: number) => api.get(`/api/products/${id}/`),\n  createProduct: (data: FormData) => api.post('/api/products/', data, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  updateProduct: (id: number, data: FormData) => api.put(`/api/products/${id}/`, data, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  deleteProduct: (id: number) => api.delete(`/api/products/${id}/`),\n  getCategories: () => api.get('/api/products/categories/'),\n};\n\n// Orders API\nexport const ordersAPI = {\n  getOrders: () => api.get('/api/user/orders/'),\n  getOrder: (id: number) => api.get(`/api/user/orders/${id}/`),\n  createOrder: (data: any) => api.post('/api/user/orders/', data),\n  updateOrder: (id: number, data: any) => api.put(`/api/user/orders/${id}/`, data),\n  deleteOrder: (id: number) => api.delete(`/api/user/orders/${id}/`),\n  \n  // Order Items\n  getOrderItems: (orderId: number) => api.get(`/api/user/orders/${orderId}/order-items/`),\n  addOrderItem: (orderId: number, data: any) => api.post(`/api/user/orders/${orderId}/order-items/`, data),\n  updateOrderItem: (orderId: number, itemId: number, data: any) => \n    api.put(`/api/user/orders/${orderId}/order-items/${itemId}/`, data),\n  deleteOrderItem: (orderId: number, itemId: number) => \n    api.delete(`/api/user/orders/${orderId}/order-items/${itemId}/`),\n};\n\n// Payment API\nexport const paymentsAPI = {\n  getPayments: () => api.get('/api/user/payments/'),\n  checkout: (orderId: number, data: CheckoutData) => api.put(`/api/user/payments/checkout/${orderId}/`, data),\n  createStripeCheckout: (orderId: number) => api.post(`/api/user/payments/stripe/create-checkout-session/${orderId}/`),\n};\n\n// Address API\nexport const addressAPI = {\n  getAddresses: () => api.get('/api/user/profile/address/'),\n  getAddress: (id: number) => api.get(`/api/user/profile/address/${id}/`),\n  createAddress: (data: Partial<Address>) => api.post('/api/user/profile/address/', data),\n  updateAddress: (id: number, data: Partial<Address>) => api.put(`/api/user/profile/address/${id}/`, data),\n  deleteAddress: (id: number) => api.delete(`/api/user/profile/address/${id}/`),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}